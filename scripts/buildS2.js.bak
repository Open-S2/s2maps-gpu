process.env.BABEL_ENV = 'production'
process.env.NODE_ENV = 'production'

const fs = require('fs')
const path = require('path')
// const webpack = require('webpack') //to access webpack runtime
const webpack5 = require('webpack-latest') //to access webpack runtime
const configuration = require('../configS2/webpack.config.js')
const configurationCSS = require('../configS2/webpack.css.config.js')

// CLEAN UP FROM OLD BUILD
const dirPath = __dirname + '/../buildS2'
removeDir(dirPath)

// SETUP COMPILER
let cssCompiler = webpack5(configurationCSS)
let compiler = webpack5(configuration)

// COMPILE
cssCompiler.run(function (err, stats) {
  if (err) console.error(err)
  else if (stats.compilation.errors) for (const error of stats.compilation.errors) console.error(error)
})
compiler.run(function (err, stats) {
  if (err) console.error(err)
  else if (stats.compilation.errors) for (const error of stats.compilation.errors) console.error(error)
})

function removeDir (path) {
  if (fs.existsSync(dirPath)) {
    const files = fs.readdirSync(dirPath)

    if (files.length > 0) {
      files.forEach(filename => {
        if (fs.statSync(dirPath + "/" + filename).isDirectory()) {
          removeDir(dirPath + "/" + filename)
        } else { fs.unlinkSync(dirPath + "/" + filename) }
      })
    } else { console.log("No files found in the directory.") }
  } else { console.log("Directory path not found.") }
}
